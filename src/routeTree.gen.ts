/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as SettingsImport } from './routes/_settings'
import { Route as IndexImport } from './routes/index'
import { Route as SettingsSettingsWorkspaceImport } from './routes/_settings/settings/workspace'
import { Route as SettingsSettingsAccountImport } from './routes/_settings/settings/account'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const SettingsRoute = SettingsImport.update({
  id: '/_settings',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsSettingsWorkspaceRoute = SettingsSettingsWorkspaceImport.update({
  id: '/settings/workspace',
  path: '/settings/workspace',
  getParentRoute: () => SettingsRoute,
} as any)

const SettingsSettingsAccountRoute = SettingsSettingsAccountImport.update({
  id: '/settings/account',
  path: '/settings/account',
  getParentRoute: () => SettingsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_settings': {
      id: '/_settings'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/_settings/settings/account': {
      id: '/_settings/settings/account'
      path: '/settings/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof SettingsSettingsAccountImport
      parentRoute: typeof SettingsImport
    }
    '/_settings/settings/workspace': {
      id: '/_settings/settings/workspace'
      path: '/settings/workspace'
      fullPath: '/settings/workspace'
      preLoaderRoute: typeof SettingsSettingsWorkspaceImport
      parentRoute: typeof SettingsImport
    }
  }
}

// Create and export the route tree

interface SettingsRouteChildren {
  SettingsSettingsAccountRoute: typeof SettingsSettingsAccountRoute
  SettingsSettingsWorkspaceRoute: typeof SettingsSettingsWorkspaceRoute
}

const SettingsRouteChildren: SettingsRouteChildren = {
  SettingsSettingsAccountRoute: SettingsSettingsAccountRoute,
  SettingsSettingsWorkspaceRoute: SettingsSettingsWorkspaceRoute,
}

const SettingsRouteWithChildren = SettingsRoute._addFileChildren(
  SettingsRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof SettingsRouteWithChildren
  '/about': typeof AboutRoute
  '/settings/account': typeof SettingsSettingsAccountRoute
  '/settings/workspace': typeof SettingsSettingsWorkspaceRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof SettingsRouteWithChildren
  '/about': typeof AboutRoute
  '/settings/account': typeof SettingsSettingsAccountRoute
  '/settings/workspace': typeof SettingsSettingsWorkspaceRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_settings': typeof SettingsRouteWithChildren
  '/about': typeof AboutRoute
  '/_settings/settings/account': typeof SettingsSettingsAccountRoute
  '/_settings/settings/workspace': typeof SettingsSettingsWorkspaceRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/about' | '/settings/account' | '/settings/workspace'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/about' | '/settings/account' | '/settings/workspace'
  id:
    | '__root__'
    | '/'
    | '/_settings'
    | '/about'
    | '/_settings/settings/account'
    | '/_settings/settings/workspace'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SettingsRoute: typeof SettingsRouteWithChildren
  AboutRoute: typeof AboutRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SettingsRoute: SettingsRouteWithChildren,
  AboutRoute: AboutRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_settings",
        "/about"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_settings": {
      "filePath": "_settings.tsx",
      "children": [
        "/_settings/settings/account",
        "/_settings/settings/workspace"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/_settings/settings/account": {
      "filePath": "_settings/settings/account.tsx",
      "parent": "/_settings"
    },
    "/_settings/settings/workspace": {
      "filePath": "_settings/settings/workspace.tsx",
      "parent": "/_settings"
    }
  }
}
ROUTE_MANIFEST_END */
